{"version":3,"sources":["utils/fetch.js","components/404.js","components/Header.js","components/Chart.js","components/Table.js","components/Country.js","components/PerState.js","components/Screens.js","App.js","index.js"],"names":["Fetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","result","status","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","PageNotFound","react_default","createElement","className","style","backgroundImage","Component","Header","props","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","NavbarText","Chart","_Component","inherits","_super","createSuper","_this","classCallCheck","_len","length","args","Array","_key","call","concat","state","series","options","loading","dateTime","componentDidMount","_yield$Fetch","data","categories","dateOptions","date","map","list","weekday","year","month","day","hour","minute","Date","datetime","name","cases","suspects","deaths","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","title","text","yaxis","fill","opacity","legend","position","horizontalAlign","offsetX","tooltip","y","formatter","val","setState","toLocaleDateString","createClass","key","value","Fragment","id","react_apexcharts_min_default","Table","Row","maxHeight","overflow","Col","md","es_Table","index","Country","_this$state","updated_at","Card","body","inverse","CardTitle","CardText","recovered","confirmed","PerState","zoom","curve","align","grid","row","Screen","react_router","exact","path","component","App","APIStatus","_callee2","_context2","components_404","react_router_dom","components_Header","Container","fluid","Screens","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5eb22fdf.chunk.js","sourcesContent":["export const Fetch = async url => {\n  const response = await fetch(url);\n  const result = await response.json();\n  const status = await response.status;\n  return { result, status };\n};\n","import React, { Component } from \"react\";\nimport \"./404.css\";\n\nclass PageNotFound extends Component {\n  render() {\n    return (\n      <div className=\"FourOhFour\">\n        <div\n          className=\"bg\"\n          style={{\n            backgroundImage: \"url('http://i.giphy.com/l117HrgEinjIA.gif')\"\n          }}\n        />\n        <div className=\"code\">API indisponível no momento... :(</div>\n      </div>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"primary\" dark expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">\n          Covid-19 Data\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink tag={Link} to=\"/tabela\">\n                Tabela geral\n              </NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Gráficos\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag={Link} to=\"/geral\">\n                  Geral\n                </DropdownItem>\n                <DropdownItem tag={Link} to=\"/estado\">\n                  Por estado\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <NavbarText>Simple Text</NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Fetch } from \"../utils/fetch\";\n\nexport class Chart extends Component {\n  state = {\n    series: [],\n    options: [],\n    loading: true,\n    dateTime: null\n  };\n\n  componentDidMount = async () => {\n    const {\n      result: { data }\n    } = await Fetch(\"https://covid19-brazil-api.now.sh/api/report/v1\");\n\n    const categories = data.map(list => list.state);\n\n    const dateOptions = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\"\n    };\n\n    const date = new Date(data.map(list => list.datetime)[0]);\n\n    const series = [\n      {\n        name: \"Confirmados\",\n        data: data.map(list => list.cases)\n      },\n      {\n        name: \"Suspeitos\",\n        data: data.map(list => list.suspects)\n      },\n      {\n        name: \"Mortes\",\n        data: data.map(list => list.deaths)\n      }\n    ];\n\n    const options = {\n      chart: {\n        type: \"bar\",\n        height: \"100%\"\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          columnWidth: \"100%\",\n          endingShape: \"rounded\"\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: [\"transparent\"]\n      },\n      xaxis: {\n        categories,\n        title: {\n          text: \"N° de pessoas\"\n        }\n      },\n      yaxis: {\n        title: {\n          text: \"Estados\"\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40\n      },\n      tooltip: {\n        y: {\n          formatter: function(val) {\n            return val + \" pessoas\";\n          }\n        }\n      }\n    };\n\n    if (options && series) {\n      this.setState({\n        options,\n        series,\n        dateTime: date.toLocaleDateString(\"pt-BR\", dateOptions),\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    if (this.state.loading) return null;\n    return (\n      <>\n        <div id=\"chart\">\n          <ReactApexChart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"bar\"\n          />\n        </div>\n        <p>Data e hora de atualização: {this.state.dateTime}</p>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Fetch } from \"../utils/fetch\";\nimport { Table as Tabela, Row, Col } from \"reactstrap\";\n\nexport class Table extends Component {\n  state = {\n    data: [],\n    loading: true\n  };\n\n  componentDidMount = async () => {\n    const {\n      result: { data }\n    } = await Fetch(\"https://covid19-brazil-api.now.sh/api/report/v1\");\n\n    this.setState({\n      data,\n      loading: false\n    });\n  };\n\n  render() {\n    if (this.state.loading) return null;\n    return (\n      <Row className=\"mt-1\" style={{ maxHeight: \"550px\", overflow: \"auto\" }}>\n        <Col md={6} className=\"offset-md-3\">\n          <Tabela className=\"table-hover\" style={{ width: \"100%\" }}>\n            <thead className=\"thead-dark\">\n              <tr>\n                <th>#</th>\n                <th>Estado</th>\n                <th>Confirmados</th>\n                <th>Mortes</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((list, index) => (\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{list.state}</td>\n                  <td>{list.cases}</td>\n                  <td>{list.deaths}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Tabela>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Fetch } from \"../utils/fetch\";\nimport { Row, Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nexport class Country extends Component {\n  state = {\n    data: [],\n    loading: true\n  };\n\n  componentDidMount = async () => {\n    const {\n      result: { data }\n    } = await Fetch(\"https://covid19-brazil-api.now.sh/api/report/v1/brazil\");\n\n    this.setState({\n      data,\n      loading: false\n    });\n  };\n\n  render() {\n    const { loading, data } = this.state;\n\n    const dateOptions = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\"\n    };\n\n    const date = new Date(data.updated_at);\n\n    if (loading) return null;\n    return (\n      <>\n        <Row className=\"mt-1\">\n          <Col>\n            <h3>Situação do Brasil</h3>\n          </Col>\n        </Row>\n        <Row className=\"mt-1\">\n          <Col md={3} className=\"mt-1\">\n            <Card\n              body\n              style={{ height: \"150px\" }}\n              className=\"text-center font-weight-bold\"\n              inverse\n              color=\"warning\"\n            >\n              <CardTitle>Casos ativos</CardTitle>\n              <CardText>{data.cases} pessoas</CardText>\n            </Card>\n          </Col>\n          <Col md={3} className=\"mt-1\">\n            <Card\n              body\n              style={{ height: \"150px\" }}\n              className=\"text-center font-weight-bold\"\n              inverse\n              color=\"danger\"\n            >\n              <CardTitle>Mortes</CardTitle>\n              <CardText>{data.deaths} pessoas</CardText>\n            </Card>\n          </Col>\n          <Col md={3} className=\"mt-1\">\n            <Card\n              body\n              style={{ height: \"150px\" }}\n              className=\"text-center font-weight-bold\"\n              inverse\n              color=\"success\"\n            >\n              <CardTitle>Recuperados</CardTitle>\n              <CardText>{data.recovered} pessoas</CardText>\n            </Card>\n          </Col>\n          <Col md={3} className=\"mt-1\">\n            <Card\n              body\n              style={{ height: \"150px\" }}\n              className=\"text-center font-weight-bold\"\n              inverse\n              color=\"info\"\n            >\n              <CardTitle>Total de casos</CardTitle>\n              <CardText>{data.confirmed} pessoas</CardText>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <small>\n              Atualizado em {date.toLocaleDateString(\"pt-BR\", dateOptions)}\n            </small>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass PerState extends Component {\n  state = {\n    series: [\n      {\n        name: \"Confirmados\",\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148, 200, 300, 1000]\n      },\n      {\n        name: \"Mortes\",\n        data: [1, 2, 5, 10, 15, 20, 32, 40, 50, 100, 122, 150]\n      }\n    ],\n    options: {\n      chart: {\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: true\n      },\n      stroke: {\n        curve: \"straight\"\n      },\n      title: {\n        text: \"Dados por estado\",\n        align: \"left\"\n      },\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Fev\",\n          \"Mar\",\n          \"Abr\",\n          \"Mai\",\n          \"Jun\",\n          \"Jul\",\n          \"Ago\",\n          \"Set\",\n          \"Out\",\n          \"Nov\",\n          \"Dez\"\n        ]\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"chart\">\n        <ReactApexChart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"line\"\n          height={350}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PerState;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Chart } from \"./Chart\";\nimport { Table } from \"./Table\";\nimport { Country } from \"./Country\";\nimport PerState from \"./PerState\";\n\nclass Screen extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Country} />\n        <Route path=\"/tabela\" component={Table} />\n        <Route path=\"/geral\" component={Chart} />\n        <Route path=\"/estado/\" component={PerState} />\n      </Switch>\n    );\n  }\n}\n\nexport default Screen;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Fetch } from \"./utils/fetch\";\nimport PageNotFound from \"./components/404.js\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Screen from \"./components/Screens\";\n\nclass App extends Component {\n  state = {\n    status: false\n  };\n\n  componentDidMount = async () => await this.APIStatus();\n\n  APIStatus = async () => {\n    const result = await Fetch(\n      \"https://covid19-brazil-api.now.sh/api/status/v1\"\n    );\n\n    this.setState({ status: result.status });\n  };\n\n  render() {\n    if (this.state.status === 404) return <PageNotFound />;\n    if (this.state.status === 200)\n      return (\n        <Router>\n          <Header />\n          <Container fluid>\n            <Row>\n              <Col>\n                <Screen />\n              </Col>\n            </Row>\n          </Container>\n        </Router>\n      );\n\n    return (\n      <Router>\n        <Header />\n        <p>loading</p>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}